name: Deployment development

on:
  workflow_dispatch:
  push:
      branches:
        - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KUBECONFIG_B64: ${{ secrets.KUBECONFIG }}

jobs:
  build-and-push:
    permissions:
      contents: read
      packages: write
      id-token: write
      actions: read
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: Create KUBECONFIG
        run: |
          echo $KUBECONFIG_B64 | base64 --decode > greenie-kubeconfig.yaml
          echo "KUBECONFIG=$(realpath greenie-kubeconfig.yaml)" >> $GITHUB_ENV

      - uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create namespace
        run: kubectl create namespace remote --dry-run=client -o yaml | kubectl apply -f -

      - uses: azure/k8s-create-secret@v4
        with:
          container-registry-url: ${{ env.REGISTRY }}
          container-registry-username: ${{ github.actor }}
          container-registry-password: ${{ secrets.GITHUB_TOKEN }}
          secret-name: regcred
          namespace: remote

      - name: Deploy chart
        run: |
          helm upgrade --install --namespace remote -f deployment/values-dev.yaml greenie-mvp-backend-dev ./deployment --set image.name=${{ steps.meta.outputs.tags }} --wait
